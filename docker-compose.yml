services:
  postgres:
    image: postgres:15
    container_name: hotel_website_builder_db
    environment:
      POSTGRES_DB: hotel_website_builder
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hotel_builder_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hotel_website_builder"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend/HotelWebsiteBuilder
      dockerfile: Dockerfile
    container_name: hotel_website_builder_backend
    ports:
      - "5001:8080"
      - "5002:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=hotel_website_builder;Username=postgres;Password=postgres123
    volumes:
      - ./backend/HotelWebsiteBuilder/wwwroot:/app/wwwroot
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hotel_builder_network

volumes:
  postgres_data:

networks:
  hotel_builder_network:
    driver: bridge 