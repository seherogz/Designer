#!/bin/bash

# Docker komutlarÄ± iÃ§in yardÄ±mcÄ± script

case "$1" in
    "build")
        echo "ğŸ”¨ Docker imajlarÄ± oluÅŸturuluyor..."
        docker-compose build
        ;;
    "up")
        echo "ğŸš€ Uygulama baÅŸlatÄ±lÄ±yor..."
        docker-compose up -d
        ;;
    "down")
        echo "ğŸ›‘ Uygulama durduruluyor..."
        docker-compose down
        ;;
    "restart")
        echo "ğŸ”„ Uygulama yeniden baÅŸlatÄ±lÄ±yor..."
        docker-compose restart
        ;;
    "logs")
        echo "ğŸ“‹ Loglar gÃ¶rÃ¼ntÃ¼leniyor..."
        docker-compose logs -f
        ;;
    "clean")
        echo "ğŸ§¹ Docker temizliÄŸi yapÄ±lÄ±yor..."
        docker-compose down -v
        docker system prune -f
        ;;
    "status")
        echo "ğŸ“Š Container durumlarÄ±:"
        docker-compose ps
        ;;
    *)
        echo "Docker komutlarÄ± iÃ§in yardÄ±mcÄ± script"
        echo ""
        echo "KullanÄ±m:"
        echo "  ./docker-commands.sh build    - Docker imajlarÄ± oluÅŸtur"
        echo "  ./docker-commands.sh up       - UygulamayÄ± baÅŸlat"
        echo "  ./docker-commands.sh down     - UygulamayÄ± durdur"
        echo "  ./docker-commands.sh restart  - UygulamayÄ± yeniden baÅŸlat"
        echo "  ./docker-commands.sh logs     - LoglarÄ± gÃ¶rÃ¼ntÃ¼le"
        echo "  ./docker-commands.sh clean    - Docker temizliÄŸi yap"
        echo "  ./docker-commands.sh status   - Container durumlarÄ±nÄ± gÃ¶ster"
        echo ""
        echo "Ã–rnek:"
        echo "  ./docker-commands.sh build && ./docker-commands.sh up"
        ;;
esac 